#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass IEEEtran
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
Literature Survey
\end_layout

\begin_layout Author
Thien Nguyen
\end_layout

\begin_layout Date
26th October 2017
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Problem Background
\end_layout

\begin_layout Standard
The purpose of this project is to explore approaches to tackle the game
 of English Draughts via the use of contemporary machine learning techniques.
 First, we will study previous historical successes in the field, and look
 at the compoments that helped build their systems.
 Then, we will look at contempoary methods of computer science that could
 be used to evolve the historical systems.
\end_layout

\begin_layout Subsection
Terms\SpecialChar softhyphen

\end_layout

\begin_layout Itemize

\series bold
Genetic Algorithm
\series default
 An evolutionary method that solves optimisation problems.
 This is based on Darwin's theorem of perpetually evolving populations of
 solutions.
\end_layout

\begin_layout Itemize

\series bold
Machine Learning
\series default
: computer algorithms related to a branch of computional learning theory.
 It allows computers to learn.
\end_layout

\begin_layout Itemize

\series bold
Neural Network
\series default
 A computational model based on the operations of "interconnected processing
 elements, which process information by their dynamic state response to
 external inputs." [1]
\end_layout

\begin_layout Itemize

\series bold
Draughts
\series default
 In this project we will be using the British Draughts (or, American Checkers)
 rules.
 For the sake of clarity these arguments will be enforced:
\end_layout

\begin_deeper
\begin_layout Enumerate
The game is played on an 8x8 checkerboard.
\end_layout

\begin_layout Enumerate
Jumps are enforced in the event that it is possible for a player to make
 one.
\end_layout

\begin_layout Enumerate
Multiple jumps are enforced.
\end_layout

\begin_layout Enumerate
In the event that a piece performs a multiple jump, if it lands on a promotion
 row (where a piece is promoted into a king), then its move is terminated.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Ply
\series default
: a ply refers to one turn taken by one of the players.
\end_layout

\begin_layout Itemize

\series bold
ELO: 
\series default
A rating system devised by Arpad Elo.
 It measures the relative skill levels of players in competitive games.
 It is commonly used in Chess, American college football and Scrabble.
\end_layout

\begin_layout Itemize

\series bold
Complete Information
\series default
: Compoments and the status of the game are wholly shown throughout, to
 the players.
\end_layout

\begin_layout Itemize

\series bold
Zero-Sum Game
\series default
: A situation where one players benefit is offset by the loss of another
 player.
\end_layout

\begin_layout Itemize

\series bold
Game Theory
\series default
: The science of strategy, or in more general, the decision-making of independen
t and competing actors in a strategic setting.
 
\end_layout

\begin_layout Section
Themes
\end_layout

\begin_layout Standard
The use of machine learning and zero sum board games is not novel; Research
 has currently moved on to tackle games with larger search spaces, most
 notably Chess 
\begin_inset CommandInset citation
LatexCommand cite
key "Lai2015"

\end_inset

, and Go
\begin_inset CommandInset citation
LatexCommand cite
key "Silver2017"

\end_inset

.
 Draughts, however, occupies a fundamental place in game theory - It is
 the most complex game ever solved to date 
\begin_inset CommandInset citation
LatexCommand cite
key "Mullins2007,Toledo-Marin2016"

\end_inset

.
 Historically, Draughts has been used as a testing ground for artificial
 intelligence and computional performance since the early introduction of
 computers.
 An early design of machine learning to play Draughts was devised by Samuel
 (1959)
\begin_inset CommandInset citation
LatexCommand cite
key "Samuel2000"

\end_inset

, where his algorithm revolved around using a linear combination of weighted
 features the board contained, such as the number of pawns, number of pawns
 positioned along the central diagonal, and so on.
 During its design, Samuel also described an early concept of Alpha Beta
 Pruning.
 The weights were then trained by the algorithm playing itself in a form
 of genetic programming.
 A later investigation by a checkers magazine evaluated Samuel's player
 to 
\begin_inset Quotes eld
\end_inset

below Class B
\begin_inset Quotes erd
\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "Schaeffer1997,Fogel2000"

\end_inset

 where Class B being categorised with an ELO range of 
\begin_inset Quotes eld
\end_inset

1600-1799
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Schaeffer et\SpecialChar softhyphen
 al.
 took the concept of solving Draughts further, and produced a paper that
 describes how the game could be be weakly solved using mathematical calculation
s in 1996, 
\begin_inset CommandInset citation
LatexCommand cite
key "Schaeffer1996"

\end_inset

 with their introduction of Chinook.
 This was made possible by using a vast database of games pre-played from
 grandmaster tournaments.
 Chinook also uses a dictionary of end games, containing all possible moves
 for a board containing at most 8 pieces.
\end_layout

\begin_layout Standard
Schaeffer took this further, proving a weak solution to Draughts after 
\begin_inset Formula $10^{14}$
\end_inset

 calculations of end-game positions.
 Using numerical calculations, it is mathematicall y proven that for two
 draughts players making no wrong moves, the game always ends in a draw
 
\begin_inset CommandInset citation
LatexCommand cite
key "Mullins2007"

\end_inset

.
\end_layout

\begin_layout Standard
While it is not disputed that Chinook is a landmark in computational limits
 - as of writing, Chinook remains the worlds strongest American checkers
 player with an ELO of 2890 - Chinook was largely made possible through
 human intervention; the player was effectively told to play in a particular
 manner.
 
\end_layout

\begin_layout Standard
Fogel et al.
 (2001) took a different approach towards playing draughts, where they used
 feed-forward convolutional neural networks and genetic algorithms.
 Their resulting player, Blondie24
\begin_inset CommandInset citation
LatexCommand cite
key "Fogel2001"

\end_inset

, was then taught to play without priori knowledge.
 This was accomplished by using a convolutional neural network that takes
 in 32 inputs (each input representing a position on the board), with a
 single output.
 Two hidden layers exist between the input and output layers.
 This resulting neural network was used to evaluate the status of the board,
 determining the overall performance scaling from -1 to 1 that suggests
 which player has the advantage.
 
\end_layout

\begin_layout Standard
Blondie24 reached an average ELO rating of 1901.
 
\end_layout

\begin_layout Standard
Sergei Perez (UC Irvine) describes the use of genetic algorithms to evolve
 weights for a convolutional neural network as a more performant alternative
 to back-propagation, in nearly all situations, other than when the number
 of generations generated for neural networks are small.
\begin_inset CommandInset citation
LatexCommand cite
key "Perez"

\end_inset


\end_layout

\begin_layout Standard
Kusiak et al.
 (2007) have devised the use of pure genetic algorithms as the premise to
 evaluate the board.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Kusiak2007"

\end_inset

 they describe the use of 25 heuristics that, when used in unison, can determine
 the evaluation of a given board.
 They continue to go further on and specify that various combinations of
 heuristics, when used in different stages of the game, prove to be the
 most promising of outcomes.
\end_layout

\begin_layout Standard
Alternative contemporary machine learning techniques have been exercised
 against Draughts.
 Franken et al.
 (2003) used draughtsboards as an evaluator for their rendition of an AI
 through Particle Swarm Optimisations.
\begin_inset CommandInset citation
LatexCommand cite
key "Franken2003"

\end_inset


\end_layout

\begin_layout Standard
Quetzalcoatl Toledo-Marin et al.
 (2016) performed studies on attacking strategies using the game of checkers
 as a reference (which however can be applied to any other zero-sum game),
 where they mathematically prove that for an offensive player, maximising
 the offensive improves their probability to win.
\begin_inset CommandInset citation
LatexCommand cite
key "Toledo-Marin2016"

\end_inset


\end_layout

\begin_layout Standard
Using genetic algorithms to improve neural networks is not a novel feature.
 In 2017 Lingxi Xie et al.
 discussed using genetic algorithms to compute optimal deep learning structures
 automatically, using an image recognition dataset as the benchmark for
 competitiveness against the networks.
\begin_inset CommandInset citation
LatexCommand cite
key "Xie2017"

\end_inset


\end_layout

\begin_layout Standard
Cobbe, et al.
 improves Blondie24 by using an evaluation function that consists of Support
 Vector Machines, which achieves locally optimal performance in approximately
 a third as many generations than its typical evolution.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Cobbe"

\end_inset

 Interestingly, they suggest the use of the ELO algorithm as the tournament
 rating system.
 This could prove to be useful background information as it would provide
 an reliable relative rating of a given agent, using fewer games.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Proposed Direction
\end_layout

\begin_layout Standard
At the end of the chapter you should briefly explain how your own work builds
 on and differs from the work that has gone before it.
\end_layout

\begin_layout Standard
The approach taken would follow the a similar framework as described for
 Blondie24, but we will be considering seperate weights for the different
 stages of the game.
\end_layout

\begin_layout Standard
Like Blondie24, a convolutional neural network would be used to evaluate
 the board.
 However, it is undecided whether to use one network with three outputs,
 or to have separate neural networks that will evaluate the board contingent
 on the phase of the game.
\end_layout

\begin_layout Standard
The genetic algorithm would be used to improve the quality of the weights
 of the neural networks.
 We will need a population of neural networks (which have varying weights),
 with a round-robin style tournament as the evaluation function.
 Finalists are chosen as the basis for the next generation.
\end_layout

\begin_layout Standard
Experimentation of techniques would be conducted in these areas, and I could
 imagine that they would be tested independently of each other.
\end_layout

\begin_layout Itemize
Effectiveness of the min-max algorithm 
\end_layout

\begin_layout Itemize
Genetic Crossover Algorithm 
\end_layout

\begin_layout Itemize
Genetic Mutation Algorithm 
\end_layout

\begin_layout Itemize
Effectiveness of the Neural Network 
\end_layout

\begin_layout Itemize
When/where to perform the genetic algorithm.
\end_layout

\begin_layout Standard
An interface is also needed in order to test the AI.
 There are multiple options for this; It could be built for the web, which
 would interact with the AI, or we can simply use a program built locally
 for it.
\end_layout

\begin_layout Standard
In order to test it's performance, we could, like Chellapilla and Fogel's
 paper, make an account for the AI at a popular gaming site and act as the
 intermediary for it.
 This would provide a lot of benefits, such as a relative ELO amongst other
 players on the site.
 
\end_layout

\begin_layout Standard
Considerations will need to be made such that the game does not strictly
 overtrain itself to play in a particular manner.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "references"
options "bibtotoc,acm"

\end_inset


\end_layout

\end_body
\end_document
